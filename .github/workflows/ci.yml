name: CI
on:
  push:
    tags:
    - 'v[0-9]+.[0-9]+.[0-9]+'
  pull_request:

jobs:
  code-coverage:
    needs: unittest
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: Download code coverage report
        uses: actions/download-artifact@v2
        with:
          name: code-coverage-report
      - name: Code Coverage Report
        uses: codecov/codecov-action@v2
        with:
          fail_ci_if_error: true
          files: coverage.txt
          flags: unittest
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true
  unittest:
    runs-on: ${{matrix.os}}
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ${{matrix.go-version}}
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4
      - name: Unittest
        run: make test
      - if: ${{ matrix.os == 'ubuntu-latest' && matrix.go-version == '1.22.x' }}
        name: Upload code coverage report
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage-report
          path: coverage.txt
      - name: Benchmark
        run: make benchmark
    strategy:
      fail-fast: true
      matrix:
        go-version: [1.21.x, 1.22.x]
        os: [ubuntu-latest]
  release_sub_packages:
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    strategy:
      matrix:
        package: [config/etcd, config/nacos, config/kubernetes, config/apollo, logger/zap]
    steps:
    - name: Check out code into the Go module directory
      uses: actions/checkout@v4
    - name: tag
      env:
        PACKAGE_TAG:  ${{ matrix.package }}/${{ github.ref_name }}
      run: |
        git config --global user.name "Github Action"
        git config --global user.email "go-jimu@users.noreply.github.com"
        git tag $PACKAGE_TAG
        git push origin $PACKAGE_TAG
